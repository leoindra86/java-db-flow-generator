#
# see http://schemaspy.org/dbtypes.html
# for configuration / customization details
#

description=PostgreSQL
connectionSpec=jdbc:postgresql://<hostOptionalPort>/<db>
host=host where database resides with optional port
port=port database is listening on
db=database name

driver=org.postgresql.Driver

# Sample path to the postgresql drivers.
# Use -dp to override.
driverPath=/org/schemaspy/drivers/postgresql-9.4.1208.jre6.jar

# return text that represents a specific :view / :schema
selectViewSql=select definition as view_definition from pg_views where viewname = :table

selectSchemasSql=SELECT nspname AS schema_name, pg_catalog.obj_description(oid, 'pg_namespace') AS schema_comment FROM pg_catalog.pg_namespace where nspname = :schema
selectCatalogsSql=SELECT datname AS catalog_name, pg_catalog.obj_description(datlastsysoid, 'pg_database') AS catalog_comment FROM pg_catalog.pg_database WHERE datname = :catalog ;
# selectTablesSql=select table_schema as table_catalog, null as table_schema, table_name, table_comment, table_rows from information_schema.tables where table_schema=:schema and table_type='BASE TABLE'

selectRoutinesSql=select r.routine_name, r.routine_type, r.dtd_identifier, r.routine_body, r.routine_definition, r.sql_data_access, r.security_type, r.is_deterministic, d.description as routine_comment from information_schema.routines r left join pg_namespace ns on r.routine_schema = ns.nspname left join pg_proc p on ns.oid = p.pronamespace and r.routine_name = p.proname left join pg_description d on d.objoid = p.oid where r.routine_schema = :schema

selectRoutineParametersSql=select r.routine_name as specific_name, p.parameter_name, p.dtd_identifier, p.parameter_mode from information_schema.parameters p left join information_schema.routines r on r.specific_name = p.specific_name where p.specific_schema = :schema

selectCheckConstraintsSql=select tc.table_name, tc.constraint_name, cc.check_clause as text from information_schema.check_constraints cc left join information_schema.table_constraints tc on tc.constraint_catalog = cc.constraint_catalog and tc.constraint_schema = cc.constraint_schema and tc.constraint_name = cc.constraint_name where tc.constraint_schema = :schema